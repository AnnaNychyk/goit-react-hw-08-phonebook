{"version":3,"file":"static/js/964.5388bddb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactForm/ContactForm.module.css?f727","components/Phonebook/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactListItem/ContactListItem.module.css?bc31","components/Phonebook/ContactListItem/ContactListItem.jsx","redux/filter/filter-selectors.js","components/Phonebook/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Filter/Filter.module.css?44e1","components/Phonebook/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","components/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__hlFUQ\",\"label\":\"ContactForm_label__PRZpH\",\"input\":\"ContactForm_input__EH0JY\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onAddContact = payload => {\n    dispatch(addContact(payload));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onAddContact({ name, phone: number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label htmlFor=\"\" className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"\" className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactListItem_btn__2t0HW\",\"name\":\"ContactListItem_name__z6HjV\",\"number\":\"ContactListItem_number__FnLk6\"};","import styles from './ContactListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { removeContact } from 'redux/contacts/contacts-operations';\n\nfunction ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const deleteContact = () => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <li key={id}>\n      <span className={styles.name}>{name}</span>:{' '}\n      <span className={styles.number}>{number}</span>\n      <button className={styles.btn} type=\"button\" onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactListItem;\n","export const getFilter = ({ filter }) => filter;\r\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nfunction ContactList() {\n  const contacts = useSelector(store => store.contacts.items);\n  const filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <ul>\n      {contacts &&\n        getFilteredContacts().map(({ id, name, phone }) => (\n          <ContactListItem key={id} name={name} number={phone} id={id} />\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__D168t\",\"input\":\"Filter_input__YV3Js\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={styles.label}>\n      Find contact by name\n      <input\n        className={styles.input}\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","export const getContacts = store => store.contacts.items;\r\nexport const getFilter = store => store.contacts.filter;\r\nexport const getLoading = store => store.contacts.loading;\r\n\r\nexport const getFilteredContacts = (contacts, filter) => {\r\n  if (!filter) {\r\n    return contacts.items;\r\n  }\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const result = contacts.items.filter(({ name }) => {\r\n    const normalizedName = name.toLowerCase();\r\n    return normalizedName.includes(normalizedFilter);\r\n  });\r\n  return result;\r\n};\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-actions';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { getLoading } from 'redux/contacts/contacts-selectors';\n\nconst Phonebook = () => {\n  const filter = useSelector(getFilter);\n  const loading = useSelector(getLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter onChange={onSetFilter} value={filter} />\n\n      {loading && <p>...load contacts</p>}\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","onSubmit","payload","preventDefault","phone","addContact","className","styles","htmlFor","type","onChange","pattern","title","required","id","onClick","removeContact","getFilter","filter","contacts","useSelector","store","items","contact","toLowerCase","includes","map","getLoading","loading","useEffect","fetchContacts","target","setFilter"],"sourceRoot":""}